# See https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key for getting GitHub write access
version: 2.1

workflows:
    version: 2
    publish-packages:
        jobs:
            - publish-packages-job:
                  filters:
                      branches:
                          only: main
    design-tokens:
        jobs:
            - design-tokens-job:
                  filters:
                      branches:
                          ignore: main
    component-styles:
        jobs:
            - component-styles-job:
                  filters:
                      branches:
                          ignore: main
    icons:
        jobs:
            - icons-job:
                  filters:
                      branches:
                          ignore: main
    react-components:
        jobs:
            - react-components-job:
                  filters:
                      branches:
                          ignore: main

jobs:
    publish-packages-job:
        docker:
            - image: cimg/node:14.15.5
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - 95:05:01:71:62:53:0f:b9:3d:bd:a8:97:03:08:42:3c
            - checkout
            - run:
                  name: Set up Git Config
                  command: git config user.email "danlevy124@gmail.com" && git config user.name "CI"
            - run:
                  name: Track remote branch
                  command: git branch --set-upstream-to origin/$CIRCLE_BRANCH
            - run:
                  name: Publish Packages
                  command: chmod u+x ./.circleci/publishPackages.sh && ./.circleci/publishPackages.sh $NPM_TOKEN
    design-tokens-job:
        docker:
            - image: cimg/node:14.15.5
        working_directory: ~/project/packages/design-tokens
        steps:
            - checkout:
                  path: ~/project
            - restore_cache:
                  key: design-tokens-v1-{{ checksum "package-lock.json" }}
            - run:
                  name: Install npm Dependencies
                  command: "[ ! -d node_modules ] && npm ci --loglevel verbose --yes || echo Using cache. No install needed."
            - run:
                  name: Tests
                  command: chmod u+x ../../.circleci/runTests.sh && ../../.circleci/runTests.sh design-tokens
            - run:
                  name: Build
                  command: npm run build
            - save_cache:
                  paths:
                      - node_modules
                  key: design-tokens-v1-{{ checksum "package-lock.json" }}
    component-styles-job:
        docker:
            - image: cimg/node:14.15.5
        working_directory: ~/project/packages/component-styles
        steps:
            - checkout:
                  path: ~/project
            - restore_cache:
                  key: component-styles-v1-{{ checksum "package-lock.json" }}
            - run:
                  name: Install npm Dependencies
                  command: "[ ! -d node_modules ] && npm ci --loglevel verbose --yes || echo Using cache. No install needed."
            - run:
                  name: Tests
                  command: chmod u+x ../../.circleci/runTests.sh && ../../.circleci/runTests.sh component-styles
            - run:
                  name: Build
                  command: npm run build
            - save_cache:
                  paths:
                      - node_modules
                  key: component-styles-v1-{{ checksum "package-lock.json" }}
    icons-job:
        docker:
            - image: cimg/node:14.15.5
        working_directory: ~/project/packages/icons
        steps:
            - checkout:
                  path: ~/project
            - restore_cache:
                  key: icons-v1-{{ checksum "package-lock.json" }}
            - run:
                  name: Install npm Dependencies
                  command: "[ ! -d node_modules ] && npm ci --loglevel verbose --yes || echo Using cache. No install needed."
            - run:
                  name: Tests
                  command: chmod u+x ../../.circleci/runTests.sh && ../../.circleci/runTests.sh icons
            - run:
                  name: Build
                  command: npm run build
            - save_cache:
                  paths:
                      - node_modules
                  key: icons-v1-{{ checksum "package-lock.json" }}
    react-components-job:
        docker:
            - image: cimg/node:14.15.5
        working_directory: ~/project/packages/react-components
        steps:
            - checkout:
                  path: ~/project
            - restore_cache:
                  key: react-components-v1-{{ checksum "package-lock.json" }}
            - run:
                  name: Install npm Dependencies
                  command: "[ ! -d node_modules ] && npm ci --loglevel verbose --yes || echo Using cache. No install needed."
            - run:
                  name: Tests
                  command: chmod u+x ../../.circleci/runTests.sh && ../../.circleci/runTests.sh react-components
            - run:
                  name: Build
                  command: npm run build
            - save_cache:
                  paths:
                      - node_modules
                  key: react-components-v1-{{ checksum "package-lock.json" }}
