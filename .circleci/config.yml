# See https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key for getting GitHub write access
version: 2.1

parameters:
    run-ci-triggers:
        type: boolean
        default: true
    run-design-tokens:
        type: boolean
        default: false
    run-component-styles:
        type: boolean
        default: false
    run-icons:
        type: boolean
        default: false
    run-react-components:
        type: boolean
        default: false

workflows:
    version: 2
    ci:
        when: << pipeline.parameters.run-ci-triggers >>
        jobs:
            - trigger-workflows-job:
                  filters:
                      branches:
                          ignore: sequential-publish
            - publish-packages-job:
                  filters:
                      branches:
                          only: sequential-publish
                      tags:
                          ignore: /^Publish.*/
    design-tokens:
        when: << pipeline.parameters.run-design-tokens >>
        jobs:
            - design-tokens-job
    component-styles:
        when: << pipeline.parameters.run-component-styles >>
        jobs:
            - component-styles-job
    icons:
        when: << pipeline.parameters.run-icons >>
        jobs:
            - icons-job
    react-components:
        when: << pipeline.parameters.run-react-components >>
        jobs:
            - react-components-job

jobs:
    publish-packages-job:
        docker:
            - image: circleci/node:14
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - 95:05:01:71:62:53:0f:b9:3d:bd:a8:97:03:08:42:3c
            - checkout
            - run:
                  name: Set up Git Config
                  command: git config user.email "danlevy124@gmail.com" && git config user.name "danlevy1"
            - run:
                  name: Track remote branch
                  command: git branch --set-upstream-to origin/$CIRCLE_BRANCH
            - run:
                  name: Publish Packages
                  command: chmod u+x ./.circleci/publishPackages.sh && ./.circleci/publishPackages.sh $NPM_TOKEN
    trigger-workflows-job:
        docker:
            - image: circleci/node:14
        steps:
            - checkout
            - run:
                  name: Install npm Dependencies
                  command: npm ci
            - run:
                  name: Trigger Workflows
                  command: chmod u+x ./.circleci/triggerWorkflows.sh && ./.circleci/triggerWorkflows.sh $PERSONAL_TOKEN $CIRCLE_BRANCH
    design-tokens-job:
        docker:
            - image: circleci/node:14
        working_directory: ~/project/packages/design-tokens
        steps:
            - checkout:
                  path: ~/project
            - run:
                  name: Install npm Dependencies
                  command: npm ci
            - run:
                  name: Tests
                  command: npm test
    component-styles-job:
        docker:
            - image: circleci/node:14
        working_directory: ~/project/packages/component-styles
        steps:
            - checkout:
                  path: ~/project
            - run:
                  name: Install npm Dependencies
                  command: npm ci
            - run:
                  name: Tests
                  command: npm test
    icons-job:
        docker:
            - image: circleci/node:14
        working_directory: ~/project/packages/icons
        steps:
            - checkout:
                  path: ~/project
            - run:
                  name: Install npm Dependencies
                  command: npm ci
            - run:
                  name: Tests
                  command: npm test
    react-components-job:
        docker:
            - image: circleci/node:14
        working_directory: ~/project/packages/react-components
        steps:
            - checkout:
                  path: ~/project
            - run:
                  name: Install npm Dependencies
                  command: npm ci
            - run:
                  name: Tests
                  command: npm test
